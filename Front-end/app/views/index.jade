extends layout

block head
  meta(name='viewport', content='width=device-width, initial-scale=1.0')
  link(rel='stylesheet', href='http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.css')
  link(rel='stylehseet', href='http://leaflet.github.io/Leaflet.markercluster/dist/MarkerCluster.Default.css')
  link(rel='stylesheet', href='http://leaflet.github.io/Leaflet.markercluster/dist/MarkerCluster.css')
  link(rel='stylesheet', href='https://fonts.googleapis.com/css?family=Lato:400,700', type='text/css')
  link(rel='stylesheet', href='css/style.css')

block body
  script(src='http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.js')
  script(src='http://leaflet.github.io/Leaflet.markercluster/dist/leaflet.markercluster-src.js')
  script(src='js/indexFunctions.js')

  .container
    #searchbar
      #header
        a(href='/') NPPES Search
      .radiobar
        input#city(type='radio', name='search_res', value='city', checked='checked')
        label(for='city') City

        input#state(type='radio', name='search_res', value='state')
        label(for='state') State Only

        input#zip(type='radio', name='search_res', value='zip')
        label(for='zip') Zip Code

        input#specialty(type='radio', name='search_res', value='specialty')
        label(for='specialty') Specialty

      form#tfnewsearch(method='get', action='localhost:8000')
        input#tftextinput.tftextinput(type='text', name='q', size='21', maxlength='120')
        input.tfbutton(type='submit', value='search')
      .tfclear

      <br>
      span#s1 

    #map

block script
  script.
    // markers layer
    var markers = new L.markerClusterGroup({
      iconCreateFunction: function(cluster) {
        return L.divIcon({ html: '<b>' + cluster.getChildCount() + '</b>', className: 'myCluster', iconSize: L.point(20, 20) });
      }
    });

    // doctors layer
    var doctors = new L.LayerGroup();

    var jsonArray = !{JSON.stringify(jsonData)};
    var points = buildPoints(jsonArray);

    // adds points to markers layer and doctors layer
    updatePoints(points);

    // credits layer
    var mbAttr = 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, ' +
                 '<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
                 'Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
        mbUrl = 'https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpandmbXliNDBjZWd2M2x6bDk3c2ZtOTkifQ._QA7i5Mpkd_m30IGElHziw';
    
    // grayscale and streets layer
    var grayscale   = L.tileLayer(mbUrl, {id: 'mapbox.light', attribution: mbAttr}),
        streets  = L.tileLayer(mbUrl, {id: 'mapbox.streets',   attribution: mbAttr});
    
    // map layer
    var map = L.map('map', {
      center: [38, -96.5],
      zoom: 5,
      layers: [grayscale, doctors]
    });
    
    // base layers options
    var baseLayers = {
      "Grayscale": grayscale,
      "Streets": streets
    };

    L.control.layers(baseLayers).addTo(map);

    // search function
    var search_button = document.getElementById('tfnewsearch');
    search_button.addEventListener('submit', setUrlParam);

    // search result counter
    var result_count = null;
    result_count = jsonArray.length;
    
    if(result_count != null) {
      window.onload = function() {
        document.getElementById('s1').innerHTML = result_count + ' doctors found';
      }
    }